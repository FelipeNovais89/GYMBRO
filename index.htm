<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>GYM BRO - Login</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background: black;
      color: white;
      font-family: 'Segoe UI', sans-serif;
      overflow: hidden;
    }

    .background-wrapper {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: -1;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
      pointer-events: none;
    }

    .background-gif {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
    }
     .video-transition {
      max-width: 100%;
      max-height: 100%;
      object-fit: contain;
    }
    #transition-in {
      display: none;
      position:
      fixed;
      top: 50%;
      left:50%;
      transform: translate(-50%, -50%);
      z- index: 2 /* acima do gif e bot√µes */
    }
    #transition-out {
      display: none;
      position:
      fixed;
      top: 50%;
      left:50%;
      transform: translate(-50%, -50%);
      z- index: 2 /* acima do gif e bot√µes */
    }
    .form-screen {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  min-height: 100vh;
  padding-top: 80px;
  z-index: 0;

  /* Imagem de fundo das telas de login/signup */
  background: url('gym_background.png') center center / cover no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
    .button-image {
      width: 100px;
      margin: 10px;
      cursor: pointer;
      position: relative;
      }
    .button-label {
      position: absolute;
      top: 47.5%; left: 50%;
      transform: translate(-50%, -50%);
      color: white;
      font-family: 'Orbitron', sans-serif;
      font-weight: bold;
      font-size: 25px;
      pointer-events: none;
      text-shadow: 2px 2px 4px black;
    }
    #muteBtn {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 28px;
  z-index: 10;
  cursor: pointer;
  user-select: none;
  background-color: rgba(0, 0, 0, 0.5);
  padding: 5px 10px;
  border-radius: 8px;
}
.form-section {
      display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
    }
    .form-section.active {
      display: block;
    }
    .container {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      text-align: center;
      display: flex;
      gap: 20px;
      flex-wrap: nowrap;
    }

form {
      background: rgba(0,0,0,0.7);
  top: 50%;
      left:50%;
      padding: 25px;
      border-radius: 10px;
      max-width: 300px;
      margin: 20px auto;
      box-shadow: 0 0 10px orange;
    }
    form h2 {
      text-align: center;
    }
    input[type="text"], input[type="email"], input[type="password"] {
      width: 92%;
      padding: 10px;
      margin-bottom: 12px;
      border: none;
      border-radius: 6px;
      font-size: 1rem;
    }
    input[type="submit"] {
      width: 100%;
      padding: 10px;
      background: orange;
      color: black;
      font-weight: bold;
      border: none;
      border-radius: 6px;
      cursor: pointer;
    }
    .back-btn {
      display: block;
  margin: 20px auto 0;
  background: none;
  border: none;
  color: white;
  text-decoration: underline;
  cursor: pointer;
  font-size: 1rem;
    }
    audio {
      display: none;
    }

    @media (orientation: portrait) {
        .background-gif {
        width: 100vw;
        height: auto;
        max-width: none;
        max-height: none;
        object-fit: contain;
      }

      .video-transition {
        width: 100vw;
        height: auto;
        max-width: none;
        max-height: none;
        object-fit: contain;
        
      }
      
      .button-image {
        width: 15vw;
      }
      .button-label {
        font-size: 3.5vw;
      }
      .container {
        flex-direction: row;
    justify-content: center;
    gap: 10px;
      }
      #muteBtn {
        justify-content: top right
        }
    }

    @media (orientation: landscape) {
      .background-gif {
        width: auto;
        height: 100vh;
        max-width: none;
        max-height: none;
        object-fit: contain;
      }
      .video-transition {
        width: auto;
        height: 100vh;
        max-width: none;
        max-height: none;
        object-fit: contain;
      }
      .button-image {
        width: 15vh;
      }
      .button-label {
        font-size: 3.5vh;
      }
      .container {
        flex-direction: row;
      }
      #muteBtn {
        justify-content: top right
        }
          }
  </style>
</head>
<body>

  <!-- GIF centralizado -->
  <div class="background-wrapper">
    <img src="gym_bro_intro.gif" alt="Gym Bro Intro" class="background-gif" id="mainGif" />
     </div>
  
  <!-- Bot√µes com imagem e texto -->
<div class="container" id="container">
  <div style="position: relative; display: inline-block;" onclick="playAudio('login')">
    <img src="Anilha Bot√£o.png" class="button-image" />
    <div class="button-label">Login</div>
  </div>

  <div style="position: relative; display: inline-block;" onclick="playAudio('signup')">
    <img src="Anilha Bot√£o.png" class="button-image" />
    <div class="button-label">Signup</div>
  </div>
</div>

<!-- V√≠deo de transi√ß√£o de entrada -->
<video id="transition-in" src="GYMBRO - Video Transition 1.mp4" class="video-transition" playsinline></video>

<!-- V√≠deo de transi√ß√£o de sa√≠da -->
<video id="transition-out" src="GYMBRO - Video Transition 2.mp4" class="video-transition" playsinline></video>
  
  <!-- üîá Bot√£o de som -->
<div id="muteBtn" onclick="toggleMute()">üîä</div>

  <!-- M√∫sica de fundo -->
<audio id="bgAudio" loop></audio>

<!-- Som do clique -->
<audio id="clickSound">
  <source src="barra_caindo_impacto.mp3" type="audio/mpeg">
  Seu navegador n√£o suporta √°udio.
</audio>

  <!-- üí• Efeito sonoro ao clicar -->
  <audio id="clickSound">
    <source src="barra_caindo_impacto.mp3" type="audio/mpeg">
    Seu navegador n√£o suporta √°udio.
  </audio>

  <!-- Tela Login -->
  <section id="login" class="form-screenn form-section">
    <div class="background-wrapper">
    <img src="gym_background.png" class="background-gif" />
  </div>
    <form id="loginForm">
      <h2>Login</h2>
      <input type="email" placeholder="Email" required />
      <input type="password" placeholder="Password" required />
      <input type="submit" value="Entrar" />
    </form>
    <button class="back-btn" onclick="goHome()">Voltar</button>
  </section>

  <!-- Tela Signup -->
  <section id="signup" class="form-screenn form-section">
    <div class="background-wrapper">
    <img src="gym_background.png" class="background-gif" />
  </div>
    <form id="signupForm">
      <h2>Signup</h2>
      <input type="text" placeholder="Name" required />
      <input type="email" placeholder="Email" required />
      <input type="password" placeholder="Password" required />
      <input type="submit" value="Cadastrar" />
    </form>
    <button class="back-btn" onclick="goHome()">Voltar</button>
  </section>

<script>
  let isMuted = false;

  // Utilit√°rio para acessar elementos por ID
  const get = id => document.getElementById(id);

  // Lista de m√∫sicas para tocar aleatoriamente
  const playlist = [
    "audio/GYM BRO Intro.mp3",
    "audio/Fitness Pulse (1).mp3",
    "audio/Fitness Boost.mp3",
    "audio/Fitness Boost (1).mp3"
  ];

  // Retorna uma faixa aleat√≥ria da playlist
  function getRandomTrack() {
    const index = Math.floor(Math.random() * playlist.length);
    return playlist[index];
  }

  // Posiciona os bot√µes com base no tamanho do GIF
  function positionButtonsInsideGif() {
    const gif = get("mainGif");
    const container = get("container");

    if (!gif || !container) return;

    const rect = gif.getBoundingClientRect();
    const targetTop = rect.top + rect.height * 0.75;
    container.style.top = `${targetTop}px`;
  }

  // A√ß√£o ao clicar em Login ou Signup
  function playAudio(target) {
    const gif = get("mainGif");
    const container = get("container");
    const transitionIn = get("transition-in");
    const bgAudio = get("bgAudio");
    const clickSound = get("clickSound");

    const loginSection = get("login");
    const signupSection = get("signup");

    if (clickSound) {
      clickSound.currentTime = 0;
      clickSound.play();
    }

    gif.style.display = "none";
    container.style.display = "none";
    loginSection.classList.remove("active");
    signupSection.classList.remove("active");

    transitionIn.style.display = "block";
    transitionIn.currentTime = 0;
    transitionIn.play();

    transitionIn.onended = () => {
      transitionIn.style.display = "none";

      if (!isMuted) {
        const track = getRandomTrack();
        bgAudio.src = track;
        bgAudio.load();
        bgAudio.play();
      }

      if (target === "login") {
        loginSection.classList.add("active");
      } else {
        signupSection.classList.add("active");
      }
    };
  }

  // A√ß√£o ao clicar em "Voltar"
  function goHome() {
    const gif = get("mainGif");
    const container = get("container");
    const loginSection = get("login");
    const signupSection = get("signup");
    const transitionOut = get("transition-out");

    loginSection.classList.remove("active");
    signupSection.classList.remove("active");

    transitionOut.style.display = "block";
    transitionOut.currentTime = 0;
    transitionOut.play();

    transitionOut.onended = () => {
      transitionOut.style.display = "none";
      gif.style.display = "block";
      container.style.display = "flex";
    };
  }

  // Alternar mute
  function toggleMute() {
    const bgAudio = get("bgAudio");
    const muteBtn = get("muteBtn");

    isMuted = !isMuted;
    bgAudio.muted = isMuted;
    muteBtn.textContent = isMuted ? "üîá" : "üîä";
  }

  // Inicializar posi√ß√£o dos bot√µes
  window.addEventListener("load", positionButtonsInsideGif);
  window.addEventListener("resize", positionButtonsInsideGif);
</script>
